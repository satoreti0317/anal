local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Name = "TeleportUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local teleportEnabled = false
local targetPlayer = nil
local teleportDistance = 10
local offsetY = 1
local uiOpen = true

-- 🔵 メインフレーム
local boxFrame = Instance.new("Frame")
boxFrame.Size = UDim2.new(0, 250, 0, 350)
boxFrame.Position = UDim2.new(1, -260, 0.5, -175)
boxFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- 背景色を黒に変更
boxFrame.BorderSizePixel = 0
boxFrame.Active = true
boxFrame.Draggable = true  -- ← これでドラッグ可能に！
boxFrame.Parent = screenGui

-- 🔽 折りたたみボタン
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 30, 0, 30)
toggleButton.Position = UDim2.new(1, -35, 0, 5)
toggleButton.AnchorPoint = Vector2.new(1, 0)
toggleButton.Text = "▲"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- ボタンの色を黒に変更
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- テキストは白
toggleButton.Parent = boxFrame

-- 📜 スクロールリスト
local playerList = Instance.new("ScrollingFrame")
playerList.Size = UDim2.new(1, -20, 0, 240)
playerList.Position = UDim2.new(0, 10, 0, 40)
playerList.CanvasSize = UDim2.new(0, 0, 0, 0)
playerList.ScrollBarThickness = 8
playerList.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- 背景色を黒に変更
playerList.BackgroundTransparency = 0.5  -- ちょっと透明にして背景が見えるようにする
playerList.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)  -- スクロールバーの色を白に変更
playerList.Parent = boxFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = playerList

-- 🔄 更新ボタン
local refreshButton = Instance.new("TextButton")
refreshButton.Size = UDim2.new(0.5, -5, 0, 40)
refreshButton.Position = UDim2.new(0, 10, 0, 290)
refreshButton.Text = "🔄 更新"
refreshButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- 背景色を黒に変更
refreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- テキストは白
refreshButton.Parent = boxFrame

-- ❌ リセットボタン
local resetButton = Instance.new("TextButton")
resetButton.Size = UDim2.new(0.5, -5, 0, 40)
resetButton.Position = UDim2.new(0.5, 5, 0, 290)
resetButton.Text = "❌ リセット"
resetButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- 背景色を黒に変更
resetButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- テキストは白
resetButton.Parent = boxFrame

-- 👤 選択中ラベル
local selectedLabel = Instance.new("TextLabel")
selectedLabel.Size = UDim2.new(1, -20, 0, 30)
selectedLabel.Position = UDim2.new(0, 10, 0, 330)
selectedLabel.BackgroundTransparency = 1
selectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- テキストは白
selectedLabel.Text = "選択中: なし"
selectedLabel.TextScaled = true
selectedLabel.Parent = boxFrame

local mouse = player:GetMouse()
local UserInputService = game:GetService("UserInputService")

-- 📋 プレイヤーリスト更新
local function refreshPlayerList()
    for _, child in pairs(playerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 0, 30)

            -- 🔹 表示名（ユーザー名）の形式にする
            local displayName = otherPlayer.DisplayName
            local username = otherPlayer.Name
            button.Text = string.format("%s (%s)", displayName, username)

            button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- 背景色を黒に変更
            button.TextColor3 = Color3.fromRGB(255, 255, 255)  -- テキストは白
            button.Parent = playerList

            button.MouseButton1Click:Connect(function()
                targetPlayer = otherPlayer
                selectedLabel.Text = "選択中: " .. displayName .. "（" .. username .. "）"
            end)
        end
    end

    task.wait()
    playerList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- 🧲 テレポート
local function teleportToSelf()
    if teleportEnabled and targetPlayer then
        local rootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local playerRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart and playerRoot then
            local forwardDirection = playerRoot.CFrame.LookVector
            local targetPosition = playerRoot.Position + forwardDirection * teleportDistance + Vector3.new(0, offsetY, 0)
            rootPart.CFrame = CFrame.new(targetPosition)
        end
    end
end

-- 📦 折りたたみ処理
local function updateUIVisibility()
    local show = uiOpen
    playerList.Visible = show
    refreshButton.Visible = show
    resetButton.Visible = show
    selectedLabel.Visible = show

    if show then
        toggleButton.Text = "▲"
        boxFrame.Size = UDim2.new(0, 250, 0, 370)
    else
        toggleButton.Text = "▼"
        boxFrame.Size = UDim2.new(0, 250, 0, 40)
    end
end

toggleButton.MouseButton1Click:Connect(function()
    uiOpen = not uiOpen
    updateUIVisibility()
end)

-- 🎮 マウス右クリックでテレポート
mouse.Button2Down:Connect(function()
    if targetPlayer then
        teleportEnabled = true
    end
end)

mouse.Button2Up:Connect(function()
    teleportEnabled = false
end)

-- 📦 ボタン動作
refreshButton.MouseButton1Click:Connect(refreshPlayerList)

resetButton.MouseButton1Click:Connect(function()
    targetPlayer = nil
    selectedLabel.Text = "選択中: なし"
end)

-- 👥 プレイヤー入退出で更新
game.Players.PlayerAdded:Connect(refreshPlayerList)
game.Players.PlayerRemoving:Connect(refreshPlayerList)

-- 🫀 毎フレームでテレポート処理
game:GetService("RunService").Heartbeat:Connect(teleportToSelf)

-- ✅ 初期表示
updateUIVisibility()
refreshPlayerList()

-- Uキーでテレポートのオン/オフを切り替え
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == Enum.KeyCode.U then
        teleportEnabled = not teleportEnabled
        if teleportEnabled then
            print("テレポート機能がオンになりました。")
        else
            print("テレポート機能がオフになりました。")
        end
    end
end)
