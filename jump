-- LocalScript（StarterPlayerScripts に入れる）

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- 超ジャンプ処理（めっちゃ高くジャンプ）
local function performJump()
    local char = LocalPlayer.Character
    if not char then return end

    local humanoid = char:FindFirstChildOfClass("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")

    if humanoid and root then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        root.Velocity = Vector3.new(0, 500, 0)
    end
end

-- Nキーを押したときにジャンプを実行
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.N then
        performJump()
    end
end)

-- LocalScript（StarterPlayerScripts に入れる）

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local activeVelocity = nil -- 現在の滑空BodyVelocity

-- 飛行停止処理
local function stopFlight()
    if activeVelocity then
        activeVelocity:Destroy()
        activeVelocity = nil
    end
end

-- 停止キーリスト
local stopKeys = {
    [Enum.KeyCode.Q] = true,
    [Enum.KeyCode.Z] = true,
    [Enum.KeyCode.X] = true,
    [Enum.KeyCode.C] = true,
    [Enum.KeyCode.V] = true,
    [Enum.KeyCode.F] = true,
}

-- 入力で飛行を停止
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if stopKeys[input.KeyCode] then
        stopFlight()
    end
end)

-- 壁接触で滑空停止
RunService.Heartbeat:Connect(function()
    if activeVelocity then
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local root = character.HumanoidRootPart
            local rayOrigin = root.Position
            local rayDirection = root.CFrame.LookVector * 3 -- 少し前をチェック
            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = {character}
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

            local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
            if result and result.Instance and not result.Instance:IsDescendantOf(character) then
                stopFlight()
            end
        end
    end
end)

-- ジャンプ＋滑空処理（飛行中は無視）
local function performJump()
    if activeVelocity then return end

    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local root = character:FindFirstChild("HumanoidRootPart")

    if humanoid and root then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        RunService.Heartbeat:Wait()
        root.Velocity = Vector3.new(0, 160, 0)

        task.delay(0.1, function()
            if root and root.Parent and not activeVelocity then
                local bv = Instance.new("BodyVelocity")
                bv.Name = "JumpGlide"
                bv.Velocity = root.CFrame.LookVector * 400 + Vector3.new(0, 60, 0)
                bv.MaxForce = Vector3.new(1e5, 0, 1e5)
                bv.P = 3000
                bv.Parent = root
                activeVelocity = bv

                task.delay(1.8, function()
                    if bv == activeVelocity then
                        stopFlight()
                    end
                end)
            end
        end)
    end
end

-- Mキーでジャンプ＆滑空
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.M then
        performJump()
    end
end)
