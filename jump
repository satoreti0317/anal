--// LocalScript：StarterPlayerScripts に入れて使ってください

local Players          = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService       = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Camera      = workspace.CurrentCamera

-- パラメータ
local SUPER_JUMP_VELOCITY = 500
local GLIDE_SPEED         = 400
local GLIDE_TIMEOUT       = 1.8

-- 状態
local activeVelocity = nil
local glideDirection = nil

-- 水平方向の向き取得
local function flatLookVector()
	local v = Camera.CFrame.LookVector
	local flat = Vector3.new(v.X, 0, v.Z)
	if flat.Magnitude == 0 then
		local char = LocalPlayer.Character
		if char and char:FindFirstChild("HumanoidRootPart") then
			flat = char.HumanoidRootPart.CFrame.LookVector
			flat = Vector3.new(flat.X, 0, flat.Z)
		else
			flat = Vector3.new(0, 0, -1)
		end
	end
	return flat.Unit
end

-- 滑空停止
local function stopGlide()
	if activeVelocity then
		activeVelocity:Destroy()
		activeVelocity = nil
		glideDirection = nil
	end
end

-- 超ジャンプ（Nキー）
local function superJump()
	stopGlide()
	local char = LocalPlayer.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	local root     = char.HumanoidRootPart
	humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	root.Velocity = Vector3.new(0, SUPER_JUMP_VELOCITY, 0)
end

-- 滑空開始（Mキー）
local function startGlide()
	stopGlide()

	local char = LocalPlayer.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	local root     = char.HumanoidRootPart

	humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	RunService.Heartbeat:Wait()
	root.Velocity = Vector3.new(0, 160, 0)

	glideDirection = flatLookVector()

	task.delay(0.1, function()
		if root.Parent == nil or activeVelocity then return end
		local bv = Instance.new("BodyVelocity")
		bv.Name     = "JumpGlide"
		bv.MaxForce = Vector3.new(math.huge, 0, math.huge)
		bv.P        = 3000
		bv.Parent   = root
		activeVelocity = bv

		local thisBV = bv
		task.delay(GLIDE_TIMEOUT, function()
			if activeVelocity == thisBV then
				stopGlide()
			end
		end)
	end)
end

-- Heartbeat更新
RunService.Heartbeat:Connect(function()
	if not (activeVelocity and glideDirection) then return end
	local char = LocalPlayer.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then
		stopGlide()
		return
	end
	local root = char.HumanoidRootPart
	activeVelocity.Velocity = glideDirection * GLIDE_SPEED

	local params = RaycastParams.new()
	params.FilterDescendantsInstances = {char}
	params.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(root.Position, glideDirection * 3, params)

	if result and result.Instance and not result.Instance:IsDescendantOf(char) then
		stopGlide()
	end
end)

-- キー入力監視
local glideStopKeys = {
	[Enum.KeyCode.Q] = true,
	[Enum.KeyCode.Z] = true,
	[Enum.KeyCode.X] = true,
	[Enum.KeyCode.C] = true,
	[Enum.KeyCode.V] = true,
	[Enum.KeyCode.F] = true,
}

UserInputService.InputBegan:Connect(function(input)
	local key = input.KeyCode
	if glideStopKeys[key] then
		stopGlide()
	elseif key == Enum.KeyCode.M then
		startGlide()
	elseif key == Enum.KeyCode.N then
		superJump()
	end
end)
