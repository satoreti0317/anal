local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Lavaという名前のPartをすべて検索して削除
for _, obj in pairs(game:GetDescendants()) do
    if obj:IsA("BasePart") and obj.Name:lower() == "lava" then
        print("削除: " .. obj:GetFullName())
        obj:Destroy()
    end
end

-- "lava" を含む名前のPartを削除
for _, obj in pairs(workspace:GetDescendants()) do
    if obj:IsA("BasePart") and obj.Name:lower():find("lava") then
        obj:Destroy()
    end
end

-- 新しく追加される lava の Touch を無効化
workspace.DescendantAdded:Connect(function(desc)
    if desc:IsA("BasePart") and desc.Name:lower():find("lava") then
        desc.CanTouch = false
    end
end)

-- 既にある lava Part の Touch を無効化
for _, part in pairs(workspace:GetDescendants()) do
    if part:IsA("BasePart") and part.Name:lower():find("lava") then
        part.CanTouch = false
    end
end
-- プレイヤー情報を取得
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- ターゲット座標
local targetPosition = Vector3.new(922.8, 250.3, 32858.8)

-- ユーザー入力サービスを使ってキーの入力を処理
local UserInputService = game:GetService("UserInputService")

-- Gキーが押された時に指定された座標に飛ぶ処理
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    -- ゲームがその入力を処理している場合は何もしない
    if gameProcessed then return end

    -- Gキーが押されたかをチェック
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.G then
        -- プレイヤーの位置を指定された座標に移動
        humanoidRootPart.CFrame = CFrame.new(targetPosition)

        -- キャラクターがその位置に留まるように、Humanoidの設定を調整
        -- もしキャラクターが動く場合は、位置をロックする方法も考えられますが、通常はそのままで問題ないはずです。
    end
end)
